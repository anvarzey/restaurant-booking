// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String   
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String    @unique
  userId       String    @db.ObjectId 
  expires      DateTime  
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?        @unique
  emailVerified   DateTime?
  passwordHashed  String
  image           String?
  role            Role           @default(USER)
  accounts        Account[]
  sessions        Session[]
  reservations    Reservation[]
}

model VerificationToken {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier  String
  token       String    @unique
  expires     DateTime

  @@unique([identifier, token])
}

model Day {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  dayOfWeek  Int     @unique
  openTime   String
  closeTime  String
}

model ClosedDay {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  date  String  @unique
}

model MenuItem {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  category           String
  image              String
  price              Float
  priceWithDiscount  Float
}

model Reservation {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  numberOfPeople  Int
  date            DateTime
  client          User      @relation(fields: [clientId], references: [id])
  clientId        String    @db.ObjectId
  preOrder        PreOrder?
}

model Order {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  menuItems   OrderItem[]
  totalPrice  Float
}

enum Role {
  ADMIN
  USER 
}

type PreOrder {
  items  PreOrderItem[]
  price  Float
}

type PreOrderItem {
  id                 String  @db.ObjectId
  quantity           Int
}

type OrderItem {
  menuItemId  String  @db.ObjectId
  quantity    Int
  subtotal    Float
}
